# = Configuration to recognize actions =

# == Names of Operators ==
# The actions will be filtered according to the configured names
# and mapped on the appropriate calls.
opname:
  prepare_bs: prepare-bs
  prepare_cs: prepare-cs
  prepare_ds: prepare-ds
  prepare_rs: prepare-rs

# == Preparation Arguments ==
# Arguments specific to preparing the different types of machines.
preparg:
  # Each prepare op must have a single argument describing the
  # machine to prepare. Valid names are:
  # c-bs, c-cs1, c-cs2, c-ds, c-rs1, c-rs2
  # m-bs, m-cs1, m-cs2, m-ds, m-rs1, m-rs2
  mps_var: m

  # prepare-bs arguments
  # Varibles are for the side and base color respectively.
  # The acceptable values are configured afterwards. These are mapped
  # to the appropriate instruction values.
  bs_side_var: side
  bs_base_var: bc
  bs_side_input: input
  bs_side_output: output
  bs_base_red: base_red
  bs_base_black: base_black
  bs_base_silver: base_silver

  # prepare-cs argument.
  # Variable naming the operation and valid operations.
  cs_op_var: op
  cs_retrieve: cs_retrieve
  cs_mount: cs_mount

  # prepare-ds arguments
  # Variable name and gate name values.
  ds_gate_var: gate
  ds_gate_1: gate-1
  ds_gate_2: gate-2
  ds_gate_3: gate-3

  # prepare-rs arguments
  # Ring color variable name and acceptable values.
  rs_ring_var: rc
  rs_ring_blue: ring_blue
  rs_ring_green: ring_green
  rs_ring_orange: ring_orange
  rs_ring_yellow: ring_yellow

# = Ignored Effect Predicates =
# Some predicates may always be sensed by a state estimator and the effects
# denote expected outcomes rather than certain ones. In this case, you may
# want to withhold certain predicates from being updated if they appear in
# the effects of an action. Configure these predicates as a list.
# Note that these predicates will not be updated and ignored for any action,
# not for just specific ones.
ignored_effect_predicates: [mps-state]

# = No-Op Action =
# Some actions you may not want to pass to the BE but always want them to
# succeed, for example, actions used to set certain fluents. List them
# in the following configuration and the interface will immediately report them
# as succeeded and handle the effects appropriately.
# Note: if a variable filter is set this still only applies to matching actions
# for which no action mapping has been defined.
succeed_actions: [cs-modeswap-retrieved, cs-modeswap-mounted, fillorder]
